---
title: 'Predicting exercise "classe" variable'
author: "Brooks Farmer"
date: "August 23, 2022"
output: html_document
---
### Building the model
The first step taken in building a prediction model for the "classe" variable was to clean up the data set. A function was built to remove the columns that have only na observations. The first 7 columns were also removed because they were descriptors regarding the data collected that have not bearing on data itself in terms of prediction. After running these two commands the data set was narrowed down to 53 columns.

### Cross validation
Cross validation was done using the caret packages' train function. The method was set to gbm and the number of folds was 5. The results are shown below.

```{r ref.label="model", echo=FALSE,warning=FALSE}

```

### Expected out of sample error
The expected out of sample error is 1 - the accuracy of .963 which is 0.037.
### Choice rationale
One of the main reason gbm was chosen was that rpart was highly inaccurate and rf required too much time to compute eve attempting to use parallel processing. 
\newpage

# Appendix

```{r model, echo=TRUE, eval=FALSE, cache=TRUE}
# load data sets

setwd("~/Documents/B Professional/Programming/R Projects/PML/Project")
training <- read.csv("~/Documents/B Professional/Programming/R Projects/PML/PML-Project/pml-training.csv")
testing <-  read.csv("~/Documents/B Professional/Programming/R Projects/PML/PML-Project/pml-testing.csv")

# remove na's and descriptive columns
col.na <- colSums(sapply(training,is.na))
col.na.test <- colSums(sapply(testing,is.na))

training <- training[,col.na==0 & col.na.test==0]
testing <- testing[,col.na==0 & col.na.test==0]

training <- training[,-c(1:7)]
testing <- testing[,-c(1:7)]

set.seed(325)
library(caret)
#create trainControl object
fitControl <- trainControl(method = "cv", number =5, allowParallel = TRUE)
#develop training model
fit <- caret::train(classe~., method="gbm", data=training, trControl=fitControl)
#evaluate model

fit$resample
confusionMatrix.train(fit)
#predict on test set
pred1 <- predict(fit,testing)
pred1
```

